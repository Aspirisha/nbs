// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.0
// source: cloud/blockstore/tools/common/go/cms/proto/msgbus.proto

package kikimr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TConsoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*TConsoleRequest_GetConfigRequest
	//	*TConsoleRequest_SetConfigRequest
	//	*TConsoleRequest_ConfigureRequest
	//	*TConsoleRequest_GetConfigItemsRequest
	//	*TConsoleRequest_GetNodeConfigItemsRequest
	//	*TConsoleRequest_GetNodeConfigRequest
	Request       isTConsoleRequest_Request `protobuf_oneof:"Request"`
	DomainName    *string                   `protobuf:"bytes,100,opt,name=DomainName" json:"DomainName,omitempty"`
	SecurityToken *string                   `protobuf:"bytes,101,opt,name=SecurityToken" json:"SecurityToken,omitempty"`
}

func (x *TConsoleRequest) Reset() {
	*x = TConsoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TConsoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TConsoleRequest) ProtoMessage() {}

func (x *TConsoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TConsoleRequest.ProtoReflect.Descriptor instead.
func (*TConsoleRequest) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDescGZIP(), []int{0}
}

func (m *TConsoleRequest) GetRequest() isTConsoleRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *TConsoleRequest) GetGetConfigRequest() *TGetConfigRequest {
	if x, ok := x.GetRequest().(*TConsoleRequest_GetConfigRequest); ok {
		return x.GetConfigRequest
	}
	return nil
}

func (x *TConsoleRequest) GetSetConfigRequest() *TSetConfigRequest {
	if x, ok := x.GetRequest().(*TConsoleRequest_SetConfigRequest); ok {
		return x.SetConfigRequest
	}
	return nil
}

func (x *TConsoleRequest) GetConfigureRequest() *TConfigureRequest {
	if x, ok := x.GetRequest().(*TConsoleRequest_ConfigureRequest); ok {
		return x.ConfigureRequest
	}
	return nil
}

func (x *TConsoleRequest) GetGetConfigItemsRequest() *TGetConfigItemsRequest {
	if x, ok := x.GetRequest().(*TConsoleRequest_GetConfigItemsRequest); ok {
		return x.GetConfigItemsRequest
	}
	return nil
}

func (x *TConsoleRequest) GetGetNodeConfigItemsRequest() *TGetNodeConfigItemsRequest {
	if x, ok := x.GetRequest().(*TConsoleRequest_GetNodeConfigItemsRequest); ok {
		return x.GetNodeConfigItemsRequest
	}
	return nil
}

func (x *TConsoleRequest) GetGetNodeConfigRequest() *TGetNodeConfigRequest {
	if x, ok := x.GetRequest().(*TConsoleRequest_GetNodeConfigRequest); ok {
		return x.GetNodeConfigRequest
	}
	return nil
}

func (x *TConsoleRequest) GetDomainName() string {
	if x != nil && x.DomainName != nil {
		return *x.DomainName
	}
	return ""
}

func (x *TConsoleRequest) GetSecurityToken() string {
	if x != nil && x.SecurityToken != nil {
		return *x.SecurityToken
	}
	return ""
}

type isTConsoleRequest_Request interface {
	isTConsoleRequest_Request()
}

type TConsoleRequest_GetConfigRequest struct {
	GetConfigRequest *TGetConfigRequest `protobuf:"bytes,5,opt,name=GetConfigRequest,oneof"`
}

type TConsoleRequest_SetConfigRequest struct {
	SetConfigRequest *TSetConfigRequest `protobuf:"bytes,6,opt,name=SetConfigRequest,oneof"`
}

type TConsoleRequest_ConfigureRequest struct {
	ConfigureRequest *TConfigureRequest `protobuf:"bytes,7,opt,name=ConfigureRequest,oneof"`
}

type TConsoleRequest_GetConfigItemsRequest struct {
	GetConfigItemsRequest *TGetConfigItemsRequest `protobuf:"bytes,8,opt,name=GetConfigItemsRequest,oneof"`
}

type TConsoleRequest_GetNodeConfigItemsRequest struct {
	GetNodeConfigItemsRequest *TGetNodeConfigItemsRequest `protobuf:"bytes,9,opt,name=GetNodeConfigItemsRequest,oneof"`
}

type TConsoleRequest_GetNodeConfigRequest struct {
	GetNodeConfigRequest *TGetNodeConfigRequest `protobuf:"bytes,10,opt,name=GetNodeConfigRequest,oneof"`
}

func (*TConsoleRequest_GetConfigRequest) isTConsoleRequest_Request() {}

func (*TConsoleRequest_SetConfigRequest) isTConsoleRequest_Request() {}

func (*TConsoleRequest_ConfigureRequest) isTConsoleRequest_Request() {}

func (*TConsoleRequest_GetConfigItemsRequest) isTConsoleRequest_Request() {}

func (*TConsoleRequest_GetNodeConfigItemsRequest) isTConsoleRequest_Request() {}

func (*TConsoleRequest_GetNodeConfigRequest) isTConsoleRequest_Request() {}

type TConsoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*TConsoleResponse_GetConfigResponse
	//	*TConsoleResponse_SetConfigResponse
	//	*TConsoleResponse_ConfigureResponse
	//	*TConsoleResponse_GetConfigItemsResponse
	//	*TConsoleResponse_GetNodeConfigItemsResponse
	//	*TConsoleResponse_GetNodeConfigResponse
	Response isTConsoleResponse_Response `protobuf_oneof:"Response"`
	Status   *TStatus                    `protobuf:"bytes,100,opt,name=Status" json:"Status,omitempty"`
}

func (x *TConsoleResponse) Reset() {
	*x = TConsoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TConsoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TConsoleResponse) ProtoMessage() {}

func (x *TConsoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TConsoleResponse.ProtoReflect.Descriptor instead.
func (*TConsoleResponse) Descriptor() ([]byte, []int) {
	return file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDescGZIP(), []int{1}
}

func (m *TConsoleResponse) GetResponse() isTConsoleResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *TConsoleResponse) GetGetConfigResponse() *TGetConfigResponse {
	if x, ok := x.GetResponse().(*TConsoleResponse_GetConfigResponse); ok {
		return x.GetConfigResponse
	}
	return nil
}

func (x *TConsoleResponse) GetSetConfigResponse() *TSetConfigResponse {
	if x, ok := x.GetResponse().(*TConsoleResponse_SetConfigResponse); ok {
		return x.SetConfigResponse
	}
	return nil
}

func (x *TConsoleResponse) GetConfigureResponse() *TConfigureResponse {
	if x, ok := x.GetResponse().(*TConsoleResponse_ConfigureResponse); ok {
		return x.ConfigureResponse
	}
	return nil
}

func (x *TConsoleResponse) GetGetConfigItemsResponse() *TGetConfigItemsResponse {
	if x, ok := x.GetResponse().(*TConsoleResponse_GetConfigItemsResponse); ok {
		return x.GetConfigItemsResponse
	}
	return nil
}

func (x *TConsoleResponse) GetGetNodeConfigItemsResponse() *TGetNodeConfigItemsResponse {
	if x, ok := x.GetResponse().(*TConsoleResponse_GetNodeConfigItemsResponse); ok {
		return x.GetNodeConfigItemsResponse
	}
	return nil
}

func (x *TConsoleResponse) GetGetNodeConfigResponse() *TGetNodeConfigResponse {
	if x, ok := x.GetResponse().(*TConsoleResponse_GetNodeConfigResponse); ok {
		return x.GetNodeConfigResponse
	}
	return nil
}

func (x *TConsoleResponse) GetStatus() *TStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type isTConsoleResponse_Response interface {
	isTConsoleResponse_Response()
}

type TConsoleResponse_GetConfigResponse struct {
	GetConfigResponse *TGetConfigResponse `protobuf:"bytes,5,opt,name=GetConfigResponse,oneof"`
}

type TConsoleResponse_SetConfigResponse struct {
	SetConfigResponse *TSetConfigResponse `protobuf:"bytes,6,opt,name=SetConfigResponse,oneof"`
}

type TConsoleResponse_ConfigureResponse struct {
	ConfigureResponse *TConfigureResponse `protobuf:"bytes,7,opt,name=ConfigureResponse,oneof"`
}

type TConsoleResponse_GetConfigItemsResponse struct {
	GetConfigItemsResponse *TGetConfigItemsResponse `protobuf:"bytes,8,opt,name=GetConfigItemsResponse,oneof"`
}

type TConsoleResponse_GetNodeConfigItemsResponse struct {
	GetNodeConfigItemsResponse *TGetNodeConfigItemsResponse `protobuf:"bytes,9,opt,name=GetNodeConfigItemsResponse,oneof"`
}

type TConsoleResponse_GetNodeConfigResponse struct {
	GetNodeConfigResponse *TGetNodeConfigResponse `protobuf:"bytes,10,opt,name=GetNodeConfigResponse,oneof"`
}

func (*TConsoleResponse_GetConfigResponse) isTConsoleResponse_Response() {}

func (*TConsoleResponse_SetConfigResponse) isTConsoleResponse_Response() {}

func (*TConsoleResponse_ConfigureResponse) isTConsoleResponse_Response() {}

func (*TConsoleResponse_GetConfigItemsResponse) isTConsoleResponse_Response() {}

func (*TConsoleResponse_GetNodeConfigItemsResponse) isTConsoleResponse_Response() {}

func (*TConsoleResponse_GetNodeConfigResponse) isTConsoleResponse_Response() {}

var File_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto protoreflect.FileDescriptor

var file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDesc = []byte{
	0x0a, 0x37, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67,
	0x62, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x4e, 0x4b, 0x69, 0x6b, 0x69,
	0x6d, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x3d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xfe, 0x04, 0x0a, 0x0f, 0x54, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x65, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x2e, 0x54, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69,
	0x6d, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e,
	0x4b, 0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xfd, 0x04, 0x0a, 0x10, 0x54, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69, 0x6d,
	0x72, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x4b,
	0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4e, 0x4b,
	0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69, 0x6d, 0x72, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x15, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4e, 0x4b, 0x69, 0x6b, 0x69, 0x6d, 0x72,
	0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x44, 0x5a, 0x42, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x3b, 0x6b, 0x69, 0x6b, 0x69, 0x6d, 0x72,
}

var (
	file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDescOnce sync.Once
	file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDescData = file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDesc
)

func file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDescGZIP() []byte {
	file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDescOnce.Do(func() {
		file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDescData)
	})
	return file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDescData
}

var file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_goTypes = []interface{}{
	(*TConsoleRequest)(nil),             // 0: NKikimrClient.TConsoleRequest
	(*TConsoleResponse)(nil),            // 1: NKikimrClient.TConsoleResponse
	(*TGetConfigRequest)(nil),           // 2: NKikimrConsole.TGetConfigRequest
	(*TSetConfigRequest)(nil),           // 3: NKikimrConsole.TSetConfigRequest
	(*TConfigureRequest)(nil),           // 4: NKikimrConsole.TConfigureRequest
	(*TGetConfigItemsRequest)(nil),      // 5: NKikimrConsole.TGetConfigItemsRequest
	(*TGetNodeConfigItemsRequest)(nil),  // 6: NKikimrConsole.TGetNodeConfigItemsRequest
	(*TGetNodeConfigRequest)(nil),       // 7: NKikimrConsole.TGetNodeConfigRequest
	(*TGetConfigResponse)(nil),          // 8: NKikimrConsole.TGetConfigResponse
	(*TSetConfigResponse)(nil),          // 9: NKikimrConsole.TSetConfigResponse
	(*TConfigureResponse)(nil),          // 10: NKikimrConsole.TConfigureResponse
	(*TGetConfigItemsResponse)(nil),     // 11: NKikimrConsole.TGetConfigItemsResponse
	(*TGetNodeConfigItemsResponse)(nil), // 12: NKikimrConsole.TGetNodeConfigItemsResponse
	(*TGetNodeConfigResponse)(nil),      // 13: NKikimrConsole.TGetNodeConfigResponse
	(*TStatus)(nil),                     // 14: NKikimrConsole.TStatus
}
var file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_depIdxs = []int32{
	2,  // 0: NKikimrClient.TConsoleRequest.GetConfigRequest:type_name -> NKikimrConsole.TGetConfigRequest
	3,  // 1: NKikimrClient.TConsoleRequest.SetConfigRequest:type_name -> NKikimrConsole.TSetConfigRequest
	4,  // 2: NKikimrClient.TConsoleRequest.ConfigureRequest:type_name -> NKikimrConsole.TConfigureRequest
	5,  // 3: NKikimrClient.TConsoleRequest.GetConfigItemsRequest:type_name -> NKikimrConsole.TGetConfigItemsRequest
	6,  // 4: NKikimrClient.TConsoleRequest.GetNodeConfigItemsRequest:type_name -> NKikimrConsole.TGetNodeConfigItemsRequest
	7,  // 5: NKikimrClient.TConsoleRequest.GetNodeConfigRequest:type_name -> NKikimrConsole.TGetNodeConfigRequest
	8,  // 6: NKikimrClient.TConsoleResponse.GetConfigResponse:type_name -> NKikimrConsole.TGetConfigResponse
	9,  // 7: NKikimrClient.TConsoleResponse.SetConfigResponse:type_name -> NKikimrConsole.TSetConfigResponse
	10, // 8: NKikimrClient.TConsoleResponse.ConfigureResponse:type_name -> NKikimrConsole.TConfigureResponse
	11, // 9: NKikimrClient.TConsoleResponse.GetConfigItemsResponse:type_name -> NKikimrConsole.TGetConfigItemsResponse
	12, // 10: NKikimrClient.TConsoleResponse.GetNodeConfigItemsResponse:type_name -> NKikimrConsole.TGetNodeConfigItemsResponse
	13, // 11: NKikimrClient.TConsoleResponse.GetNodeConfigResponse:type_name -> NKikimrConsole.TGetNodeConfigResponse
	14, // 12: NKikimrClient.TConsoleResponse.Status:type_name -> NKikimrConsole.TStatus
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_init() }
func file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_init() {
	if File_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto != nil {
		return
	}
	file_cloud_blockstore_tools_common_go_cms_proto_console_base_proto_init()
	file_cloud_blockstore_tools_common_go_cms_proto_console_config_proto_init()
	file_cloud_blockstore_tools_common_go_cms_proto_console_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TConsoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TConsoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TConsoleRequest_GetConfigRequest)(nil),
		(*TConsoleRequest_SetConfigRequest)(nil),
		(*TConsoleRequest_ConfigureRequest)(nil),
		(*TConsoleRequest_GetConfigItemsRequest)(nil),
		(*TConsoleRequest_GetNodeConfigItemsRequest)(nil),
		(*TConsoleRequest_GetNodeConfigRequest)(nil),
	}
	file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TConsoleResponse_GetConfigResponse)(nil),
		(*TConsoleResponse_SetConfigResponse)(nil),
		(*TConsoleResponse_ConfigureResponse)(nil),
		(*TConsoleResponse_GetConfigItemsResponse)(nil),
		(*TConsoleResponse_GetNodeConfigItemsResponse)(nil),
		(*TConsoleResponse_GetNodeConfigResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_goTypes,
		DependencyIndexes: file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_depIdxs,
		MessageInfos:      file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_msgTypes,
	}.Build()
	File_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto = out.File
	file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_rawDesc = nil
	file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_goTypes = nil
	file_cloud_blockstore_tools_common_go_cms_proto_msgbus_proto_depIdxs = nil
}
