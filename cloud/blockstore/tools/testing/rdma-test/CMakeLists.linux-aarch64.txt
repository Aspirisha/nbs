
# This file was generated by the build system used internally in the Yandex monorepo.
# Only simple modifications are allowed (adding source-files to targets, adding simple properties
# like target_include_directories). These modifications will be ported to original
# ya.make files by maintainers. Any complex modifications which can't be ported back to the
# original buildsystem will not be accepted.


find_package(AIO REQUIRED)
get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)
get_built_tool_path(
  TOOL_protoc_bin
  TOOL_protoc_dependency
  contrib/tools/protoc/bin
  protoc
)
get_built_tool_path(
  TOOL_cpp_styleguide_bin
  TOOL_cpp_styleguide_dependency
  contrib/tools/protoc/plugins/cpp_styleguide
  cpp_styleguide
)

add_executable(rdma-test)
target_link_libraries(rdma-test PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  tools-enum_parser-enum_serialization_runtime
  blockstore-libs-common
  blockstore-libs-diagnostics
  libs-rdma-iface
  libs-rdma-impl
  core-libs-common
  core-libs-diagnostics
  cpp-deprecated-atomic
  library-cpp-getopt
  library-cpp-lwtrace
  cpp-lwtrace-mon
  cpp-monlib-dynamic_counters
  AIO::aio
  contrib-libs-liburing
  contrib-libs-protobuf
)
target_link_options(rdma-test PRIVATE
  -ldl
  -lrt
  -Wl,--no-as-needed
  -fPIC
  -fPIC
  -lpthread
  -lrt
  -ldl
)
target_proto_messages(rdma-test PRIVATE
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/protocol.proto
)
target_sources(rdma-test PRIVATE
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/app.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/bootstrap.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/initiator.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/main.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/options.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/probes.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/protocol.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/runnable.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_local_aio.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_local_uring.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_memory.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_null.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_rdma.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/target.cpp
)
generate_enum_serilization(rdma-test
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/options.h
  INCLUDE_HEADERS
  cloud/blockstore/tools/testing/rdma-test/options.h
)
target_allocator(rdma-test
  cpp-malloc-tcmalloc
  libs-tcmalloc-no_percpu_cache
)
target_proto_addincls(rdma-test
  ./
  ${CMAKE_SOURCE_DIR}/
  ${CMAKE_BINARY_DIR}
  ${CMAKE_SOURCE_DIR}
  ${CMAKE_SOURCE_DIR}/contrib/libs/protobuf/src
  ${CMAKE_BINARY_DIR}
  ${CMAKE_SOURCE_DIR}/contrib/libs/protobuf/src
)
target_proto_outs(rdma-test
  --cpp_out=${CMAKE_BINARY_DIR}/
  --cpp_styleguide_out=${CMAKE_BINARY_DIR}/
)
vcs_info(rdma-test)
